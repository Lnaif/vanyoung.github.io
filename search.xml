<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Xp0int新生杯交流赛Write up]]></title>
      <url>http://lnaif.github.io/2016/10/20/Xp0int-ctf/</url>
      <content type="text"><![CDATA[为了招揽安全方向的新生，暨南大学Xp0int团队组织了Xp0int2016新生杯交流赛。 由于是民间团队，题目较基础，校内外大牛就不用来战了。 本文总结了这次比赛题目的Write up，详细请查看全文。 Misc签到题 规则，请提交flag{}括号里面的内容，如有问题请联系管理员 想知道 flag ，去微信公众号Xp0int问一问吧！ flag{Xp0int_123456789} Xp0int-Stegano 这是Xp0int的图片，里面藏着信息，你能找到吗?xp0.png 基础的隐写术 另存为图片，用记事本打开，最后一段写了flag Xp0int-Change 一串奇怪的字符，你需要解开它隐藏的秘密\u002d\u0032\u003a\u0064\u0063\u0075\u0067\u0038\u0036\u005c\u006f\u007a\u006a\u005c\u007c\u0072\u0039\u0059\u004a\u0043\u0079\u0063\u0059\u0037\u0032\u004e\u0059\u0054\u006f\u0051\u0046\u0065\u0037\u0051\u004a\u004c\u003b 该编码为Unicode编码，所以解码一下得到-2:dcug86\ozj\|r9YJCycY72NYToQFe7QJL; 前面的-2是提示我们向前偏移2个字符，所以写个.py再解码就解决了 123456import base64str1='dcug86\ozj\|r9YJCycY72NYToQFe7QJL;'str2=''for x in str1: str2+=chr(ord(x)-2)print base64.b64decode(str2[6:]) 直接输出flag 隐写术 找找看flag在哪里？真的在DOC文件里吗？应该在？flag.docx 将文件后缀改为.zip（或者其他压缩格式） 打开/word/document.xml目录,ctrl+f搜索flag关键词，得到flag Webwhere r u from 你是谁？你从哪里来？要到哪里去http://pyzpyjy.cn/refer/ 题目已经说的很清楚了from http://baidu.com enter 修改请求头Referer参数Referer: http://baidu.com xss 快输入点什么让它弹出flag吧http://pyzpyjy.cn/xss/ 非常基础的xss，未过滤&lt;script&gt; 直接在输入框输入&lt;script&gt;alert(1)&lt;/script&gt; Get flag http://123.207.1.235/ctf/getflag.php 查看请求头后发现Cookie参数为Cookie:flag=0 很明显，直接修改Cookie:flag=1即可返回flag 无脑前端 输入正确的验证码就可以拿到flag咯！很简单吧！lwh-.html 查看源代码发现&lt;head&gt;上面引用了&lt;script&gt;脚本 12345678910111213function flag () &#123; var point=document.getElementById("check").value; var flag="520"; document.write(point); if(point==flag) &#123; alert("ZmxhZyhYcDBpbnRBbm5vbW9yaXR5Sk5VKQo= (p.s.可以试一试base64解码)"); &#125; else &#123; alert("输入有误"); &#125;&#125; 将ZmxhZyhYcDBpbnRBbm5vbW9yaXR5Sk5VKQo=base64解码即可获得flag，确实非常无脑 PHP~ 师兄师姐的话不要全信http://www.lynnlinlin.cn/Xp0int/index.php 页面上显示index.php.txt有毒，不要看！！，明摆着让你看 查看index.php.txt显示如下php代码 1234567891011121314&lt;?php if("Xp0int233" == $_GET[id])//$_GET 变量是一个数组，内容是由 HTTP GET 方法发送的变量名称和值。从带有 GET 方法的表单发送的信息会显示在浏览器的地址栏&#123; echo "&lt;p&gt;not allowed!&lt;/p&gt;"; exit();//退出&#125;$_GET[id] = urldecode($_GET[id]);//urldecode函数将 URL 编码后字符串还原成未编码的样子。编码使用 %## 的格式。if($_GET[id] == "Xp0int233")&#123; echo "&lt;p&gt;Congratulations!&lt;/p&gt;"; echo "&lt;p&gt;flag: *********&lt;/p&gt;";&#125;echo "&lt;br&gt;&lt;br&gt;index.php.txt有毒，不要看！！";?&gt; 注释上已经说的很清楚了，id应该为Xp0int233的url编码，但是urldecode()会先将url编码解码再请求，所以要对Xp0int233的url编码再进行一次url编码 先将Xp0int233编码为%58%70%30%69%6e%74%32%33%33 再一次编码为%25%35%38%25%37%30%25%33%30%25%36%39%25%36%65%25%37%34%25%33%32%25%33%33%25%33%33 注入?id=%25%35%38%25%37%30%25%33%30%25%36%39%25%36%65%25%37%34%25%33%32%25%33%33%25%33%33返回flag cookie http://123.207.1.235/ctf/setcookie.php 与上面Get flag相同方法 JsFuck http://123.207.1.235/ctf/jsfuck.html JSFuck 可以只用 6 个字符 !+ 来编写 JavaScript 程序，可起到一定加密作用。教程：JsFuck教程 我们自己去解析这么大段JsFuck是不可能的，所以用到工具网站http://www.jsfuck.com/ 复制JsFuck代码到工具网站揭秘，得到flag Login Brute Force http://pyzpyjy.cn/session/ 题目好像是在暗示爆破，然而并不是。链接显示题目与session有关（session的工作原理） 操作 先用扫描工具扫一遍，扫到有个robots.txt（robots协议），发现/admin/目录 进入/admin/显示Please login first!，所以知道这两个目录之间是靠session判断用户是否是登录状态 接着随便输入用户名、密码，并在弹窗期间进入/admin/，显示Please login as admin! 将用户名改为admin后再次尝试，得到flag 原理 弹出error后确认会跳转回登录页面，原来的session会被销毁，再去admin就会显示未登录 在没按确认的时候，session还没被销毁，此时进入admin就等于登陆状态进去的 /admin/目录只对username进行判断，并返回相应内容，并判断密码 类似功能的源码123456789101112&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form method="post" action=""&gt;username:&lt;input type="text" name="name"&gt;&lt;br&gt;password:&lt;input type="password" name="pwd"&gt;&lt;br&gt;&lt;input type="submit" value="login"&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 123456789101112&lt;?phpsession_start();if($_SESSION['name'])&#123; if($_SESSION['name']=='admin') echo "flag is 123"; else echo "Please login as admin!"&#125;else echo "Please login first!";?&gt; 注注注 我希望你们守住（手注），好像sqlmap用不了的哦 get it 降低难度，提交参数是id哦，别以为id=1就可以了，呵呵 若访问不了，请过几秒后刷新 ​ CryptoCrypto1 这是一个有趣的密码 Hint: 百度识图 http://pyzpyjy.cn/zhujuan/ 有链接名称得知可能是猪圈密码 对照密码表翻译出3张图片代表zhu，提交即返还flag Morse ..-. .-.. .- –. -..- .–. .. -. - – — .-. … . -.-. — -.. . 摩尔斯密码 对照密码表翻译即可得到flagxpintmorsecode 你猜 ESZDCTF 852 IUHNM GHYTFVB 按照顺序在键盘上敲一边，其轨迹为nice GO 听说出题人喜欢吃夜宵食堂二楼的培根加蛋手抓饼！ flag{BABAB ABBBA ABBAB ABAAA ABBAA BAABA AABBA ABBAB} 提交时无空格 培根密码 对照第一种密码表翻译得到vonimsgn，无论大小写都错误 题目提示食堂二楼的培根…，因此对照第二种密码表翻译得到xpointgo或xpojintgo，都试一下就行了 搞那么多干嘛 搞起，这什么加密呢 什么，看不全?我故意的，不用你删除换行还怎么样,我相信你有办法获取 JZVEKMS2IRJGYTL2IEYVSVC2NRHHUUJSLF5FE3CNPJETAWKULJVE4R2VGBHEIUTMJZVGWMKPKRKTGTSENMZU6VCWNBHG2RJQLJCE2MCOI5KTGWKUKV4E26SJGFMVIVJQJZWUS6SNKRJG2TSUKEYU4VCNPBHEOUJQJZCFK6KONJTTAWSUKEZU4R2RGNHUIVTIJZWVCMKOKRSGQTSHKUYE6RCNO5GTEUJ5 666666 flag 666666 0123 1.txt Re请输入flag Hit：尝试使用IDA，进行逆向，工具下载 请戳–&gt;http://down.52pojie.cn/Tools/Disassemblers/ re100.zip first Android 破解大师，不要费劲心思破解了 crackme0001.apk Read ASM int main(int argc, char const *argv[]){ char input[] = {0x0, 0x67, 0x6e, 0x62, 0x63, 0x7e, 0x74, 0x62, 0x69, 0x6d,0x55, 0x6a, 0x7f, 0x60, 0x51, 0x66, 0x63, 0x4e, 0x66, 0x7b,0x71, 0x4a, 0x74, 0x76, 0x6b, 0x70, 0x79, 0x66 , 0x1c}; func(input, 28); printf(“%s\n”,input+1); return 0;}func函数的asm代码如下:00000000004004e6 : 4004e6: 55 push rbp 4004e7: 48 89 e5 mov rbp,rsp 4004ea: 48 89 7d e8 mov QWORD PTR [rbp-0x18],rdi 4004ee: 89 75 e4 mov DWORD PTR [rbp-0x1c],esi 4004f1: c7 45 fc 01 00 00 00 mov DWORD PTR [rbp-0x4],0x1 4004f8: eb 28 jmp 400522 4004fa: 8b 45 fc mov eax,DWORD PTR [rbp-0x4] 4004fd: 48 63 d0 movsxd rdx,eax 400500: 48 8b 45 e8 mov rax,QWORD PTR [rbp-0x18] 400504: 48 01 d0 add rax,rdx 400507: 8b 55 fc mov edx,DWORD PTR [rbp-0x4] 40050a: 48 63 ca movsxd rcx,edx 40050d: 48 8b 55 e8 mov rdx,QWORD PTR [rbp-0x18] 400511: 48 01 ca add rdx,rcx 400514: 0f b6 0a movzx ecx,BYTE PTR [rdx] 400517: 8b 55 fc mov edx,DWORD PTR [rbp-0x4] 40051a: 31 ca xor edx,ecx 40051c: 88 10 mov BYTE PTR [rax],dl 40051e: 83 45 fc 01 add DWORD PTR [rbp-0x4],0x1 400522: 8b 45 fc mov eax,DWORD PTR [rbp-0x4] 400525: 3b 45 e4 cmp eax,DWORD PTR [rbp-0x1c] 400528: 7e d0 jle 4004fa 40052a: 90 nop 40052b: 5d pop rbp 40052c: c3 ret 抛骰子 好玩的抛骰子游戏，大家快来玩啊！ http://pan.baidu.com/s/1slTHxcp 许可本文章采用知识共享署名-非商业性使用-禁止演绎 3.0 许可协议进行许可，转载请注明来源。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[坑！WinSCP使用utf-8编码错误]]></title>
      <url>http://lnaif.github.io/2016/10/19/WinSCP-error-utf8/</url>
      <content type="text"><![CDATA[前阵子给班级网站jnuis.club加了一个显示倒计时的js代码，用于提醒同学们叫作业。然而这周在更新截止时间时却出现了错误，无论如何修改js代码中的EndTime，经WinScp上传后，网站还是显示原来的倒计时，于是就开始了苦逼排除BUG之路。 源码先放上倒计时js源码，存为countdown.js 1234567891011121314151617181920212223function getRTime()&#123; var EndTime= new Date('2016/10/26 00:00:00'); var NowTime = new Date(); var t =EndTime.getTime() - NowTime.getTime(); /*var d=Math.floor(t/1000/60/60/24); t-=d*(1000*60*60*24); var h=Math.floor(t/1000/60/60); t-=h*60*60*1000; var m=Math.floor(t/1000/60); t-=m*60*1000; var s=Math.floor(t/1000);*/ var d=Math.floor(t/1000/60/60/24); var h=Math.floor(t/1000/60/60%24); var m=Math.floor(t/1000/60%60); var s=Math.floor(t/1000%60); document.getElementById("t_d").innerHTML = d + "天"; document.getElementById("t_h").innerHTML = h + "时"; document.getElementById("t_m").innerHTML = m + "分"; document.getElementById("t_s").innerHTML = s + "秒"; &#125; setInterval(getRTime,1000); 在HTML文件中引用 12345678910&lt;script type="text/javascript" src="js/countdown.js"&gt;&lt;/script&gt;&lt;div id="CountMsg"&gt; 距离截止还有&lt;/br&gt; &lt;span style="color:rgb(39,38,54);font-size:28px;font-weight:400;"&gt; &lt;span id="t_d"&gt;00天&lt;/span&gt; &lt;span id="t_h"&gt;00时&lt;/span&gt; &lt;span id="t_m"&gt;00分&lt;/span&gt; &lt;span id="t_s"&gt;00秒&lt;/span&gt; &lt;/span&gt;&lt;/div&gt; 初步猜测经历了几百番刷新，我可以确定这不是我眼睛的问题。 于是我分析（猜） js文件BUG js文件未调用 WinScp传输问题 排除BUG排除js文件BUGjs文件在之前已经修改过两次EndTime，都能够准确显示倒计时，所以我确定没有BUG。但为了以防万一，还是重新手撸了一份代码把远端文件覆盖掉。 js文件未调用突然想到，js文件可能在本地有缓存，而导致修改的远端js文件并没有被调用，而是继续用了本地的缓存js文件，导致的倒计时不改变。所以我点击右键-&gt;检查元素-&gt;网络 发现并没有countdown.js 的请求。果然是被本地缓存覆盖了，所以清除了一下缓存，准备刷新皆大欢喜 然而。。 然后 检查元素-&gt;JS 显示了SyntaxError: unterminated string literal。点进去一看，指向countdown.js的几行含乱码代码: 1234document.getElementById("t_d").innerHTML = d + "澶?;document.getElementById("t_h").innerHTML = h + "鏃?;document.getElementById("t_m").innerHTML = m + "鍒?;document.getElementById("t_s").innerHTML = s + "绉?; 这分明就是没有设置utf8编码啊，真是够蠢。 WinSCP使用utf8错误在回WinSCP检查时，才发现自己忘了切换为utf8编码。然而在切换utf8时，却弹出错误 加载文件/path/时错误，使用utf8编码 也不知道WinScp哪根筋抽了，在随后的半个小时里，关键词换了千百遍，仍然没有查到这个错误。 GG 解决思索片刻，想出了一个办法 utf8不能用，不用中文不就行了 然后变改成了 1234document.getElementById("t_d").innerHTML = d + "D";document.getElementById("t_h").innerHTML = h + "H";document.getElementById("t_m").innerHTML = m + "M";document.getElementById("t_s").innerHTML = s + "S"; 机智如我。 其他目前关于WinSCP的使用utf8编码错误目前还没有找到其他解决办法，如果有了解这方面的朋友可以在下面留言告诉我，感谢。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用Hexo遇到的问题及解决办法]]></title>
      <url>http://lnaif.github.io/2016/10/19/hexo-error/</url>
      <content type="text"><![CDATA[前言Hexo是一个非常好用的静态博客生成器，但在使用过程中尤其是第一次使用可能会遇到诸多报错。可能由于配置、操作不当、版本迭代、Hexo本身的BUG导致使用不顺畅。 本文主要记录我在使用Hexo中遇到的问题，遇到BUG可通过issues给Hexo作者提出问题或意见。 问题及解决npm安装问题npm安装Hexo依赖包过慢解决方案 使用VPN 使用淘宝镜像 1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装时报错报错git is not command 解决方案： 需要配置git的环境变量到系统变量中去。操作:添加如下路径到系统环境变量的PATH中 123C:\Users\user\AppData\Local\GitHub\PortableGit_yourpath\cmd或C:\Users\user\AppData\Local\GitHub\PortableGit_yourpath\usr\bin 注意，此路径是指向你的git安装路径中的装有git.exe的文件夹，不同设备上可能不同。 Hexo错误安装时报错报错：Cannot find moudle 123&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125; 解决方案： 安装时Hexo时带上 --no-optional 命令 1$ npm install hexo --no-optional _config.yml编译不通过.yml语法及其严格，不过往往是空格导致的问题。 解决方案： 仔细检查_config,yml文件，所有设置参数属性末尾都要加空格 sever报错输入命令hexo sever提示找不到指令 解决方案： 安装sever依赖包 1npm install hexo-server --save 注意：Hexo3.0版本后与server分离，此方法适用于Hexo3.0版本及以后。 deploy报错输入命令hexo deploy出现错误信息：1&apos;github&apos; does not appear to be a git repository 解决方案： 检查_config.yml中deploy设置。参见http://hexo.io/docs/deployment.html。 删除.deploy_git文件夹并且执行hexo clean后，重新hexo deploy。 Git错误error deployer not found:github报错error deployer not found:github 解决方案： 修改_config.yml中type为git 12deploy: type: git 安装deploy依赖包 1npm install hexo-deployer-git –save 注意：Hexo3.0版本后与deploye分离，此方法适用于Hexo3.0版本及以后。 github –crendetials: git is not command 报错：github --crendetials: git is not command 解决方案 检查与git shh是否连接 修改_config.yml中respository参数 12deploy: repository: ssh://git@github.com/yourname/yourname.github.io.git Hexo3.0版本后的坑deploy参数设置 1234deploy: type: git repository: ssh://git@github.com/yourname/yourname.github.io.git branch: yourbranch 注意：绝大多数教程上repository参数都被设置为 1repository: http://github.com/yourname/yourname.github.io.git 但我在deploy的时候却报错github --crendetials: git is not command 在将repository参数设置为 1repository: ssh://git@github.com/yourname/yourname.github.io.git 才操作成功，不清楚是什么原因，请各位根据自己的设备情况自行调试。 许可本文章采用知识共享署名-非商业性使用-禁止演绎 3.0 许可协议进行许可，转载请注明来源。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Game for programmer, Code and Logic]]></title>
      <url>http://lnaif.github.io/2016/10/19/Game-for-programmer/</url>
      <content type="text"><![CDATA[Do you still have a headache for learning programming? Maybe games is the medicine. I have collect 7 game for programming, have a good fun. Factorio The game is a sandbox style adventure games, reference from Minecraft. Players collect the original resources from the surface of planet (map), through the continuous synthesis of different levels to obtain the final product. But the difference is that this game is more emphasis on automation of the production process, through the reasonable deployment of transport equipment and pipelines, from a collection of resources, transportation, production equipment through the synthesis, storage, achieve the ultimate product output line, and through the reasonable construction of production and transportation in order to ensure the production capacity optimization. One of my favourite games.Sold on STEAM, ￥68. Human Resource Machine Human Resource Machine uses the concept of a corporate office worker assigned to perform tasks that involve moving objects between an inbox, an outbox, and to and from storage areas as a metaphor for assembly language concepts. The player works through several puzzles in constructing a program to complete a specific task. Sold on STEAM, ￥39. TIS-100 The game has the player develop mock assembly language code to perform certain tasks on a virtualized 1980 computer that has been corrupted. Sold on STEAM, ￥28. Hacknet Hacknet allows the player to perform simulated hacking on a computer or anything. Sold on STEAM, ￥36. CodeCombat CodeCombat is an HTML5 role-playing game (RPG) that teaches you basic programming concepts. Supports 6 different languages, including: JavaScript, CoffeeScript, Lua, Python, Clojure, and Io. The game covers a wide range of programming topics, such as: strings, variables, method calls, vector graphics, etc.. For free. Link:https://codecombat.com/ Code Hunt In this game, you play a code hunter, responsible for fixing the code, and making it return the desired result. A total of 14 levels need you to complete. Support Java and C#. You can learn to include programming concepts such as algorithms, loops, and conditional expressions. You can also expand other levels by reading the Hunt Code design manual For free. Link: https://www.codehunt.com/ CodinGame CodinGame support including PHP, C, JavaScript, and more than 20 kinds of programming languages. Powerful support for user interface, which can be customized. For example, you can choose the style of your code editor: “Emacs“, “Vim“, or “Classic“ (default). For free. Link: https://www.codingame.com/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Why start blog]]></title>
      <url>http://lnaif.github.io/2016/10/16/Why-start-blog/</url>
      <content type="text"><![CDATA[EarlyI have thought about write some notes on the blog early, but really have a longing for the blog is in the sophomore. After carefully read the AnqurVanillapy’s blog, I firmly decided to build a blog to record my learning experience and some inspiration. I start to write mainly from: Accumulation. Accumulation of work and life among the thoughts in learning and what have learned. Excitation. Encourage myself to read ceaselessly, study ceaselessly, practice ceaselessly. Communication. The blogosphere is a place full of masters. Share. Self-improvement, but also take pleasure in helping others. ContentMy blog is the main record and sharing of work and life of my own thinking on the learning, the accumulation of technology, and the perception of life, and not prepared to account for life trivial. At the same time, the blog will be regularly reproduced some of the individual that is fine, nutritious article to enhance the overall quality of the blog, encourage reading and promote communication. Why in EnglishMost of the literature is written in English, it is necessary for me to practice. How to build a blogAs an amateur web developer, I need to keep a record of the development process. Require GitHub Pages Hexo GitHub pagesWhat is GitHub Pages GotGitHub：GitHub Git教程-廖雪峰 Github Pages can be thought of as a user-written static web page hosted on github that describes the user (team) itself or the project. How start GitHub pages Github Pages HexoWhat is HexoHexo is a static blog program based on the Nodejs , you can easily generate a static web page hosted on github. Citing the author’s words: A fast, simple &amp; powerful blog framework, powered by Node.js. How start HexoHexo|Documents Hexo-theme-NexTRepository:Hexo-theme-next MarkdownWhat is Markdown Markdown is a lightweight markup language, the founder is John Gruber (John Gruber). It allows people to “write documents in plain text format that is easy toread and then convert to a valid XHTML (or HTML) document.” Why Markdown Markdown lets us focus on writing, not on typography. Markdown editorIt’s not difficult learning Markdown in half an hour, but a good Markdown editor is hard to find in half a day. I’m using Typora, a light and simple editor, especially, for free. LicenseCC BY-NC-ND 3.0 CN]]></content>
    </entry>

    
  
  
</search>
